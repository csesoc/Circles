{"version":3,"sources":["pages/CourseSelector/CourseSelector.module.css","pages/CourseSelector/CourseList.module.css","components/ThemeToggle.js","actions/toggleTheme.js","actions/userAction.js","pages/CourseSelector/SearchCourse.js","pages/CourseSelector/CourseMenu.js","pages/CourseSelector/CourseList.js","pages/CourseSelector/CourseDescription.js","actions/updateCourses.js","pages/CourseSelector/CourseSelector.js","pages/DegreeSelector/main.js","pages/ProgressionChecker/DegreeCard.js","pages/ProgressionChecker/SkeletonCard.js","pages/ProgressionChecker/SkeletonDashboard.js","components/GlobalColors.js","components/liquidProgressChart/LiquidProgressChart.js","pages/ProgressionChecker/Dashboard.js","pages/ProgressionChecker/ListView.js","pages/ProgressionChecker/main.js","pages/TermPlanner/DraggableCourse.js","pages/TermPlanner/TermBox.js","pages/TermPlanner/OptionsDrawer.js","pages/TermPlanner/SkeletonPlanner.js","pages/TermPlanner/main.js","images/circlesLogo.svg","App.js","reducers/themeReducer.js","reducers/updateCourses.js","reducers/userReducer.js","reducers/index.js","index.js","pages/CourseSelector/CourseDescription.module.css"],"names":["module","exports","ThemeToggle","useState","theme","window","localStorage","getItem","JSON","parse","setTheme","dispatch","useDispatch","React","useEffect","setItem","stringify","type","payload","document","body","classList","remove","add","toggleStyle","backgroundColor","checkedChildren","display","unCheckedChildren","defaultChecked","onChange","style","setUnplannedCourses","getUnplannedCourses","axios","method","url","then","data","unplanned","catch","console","log","Option","Select","SearchCourse","props","history","useHistory","showSearch","width","marginRight","placeholder","optionFilterProp","value","setCourseId","push","onFocus","onBlur","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","Object","keys","courses","map","course","className","SubMenu","Menu","CourseMenu","useParams","id","core","setCore","electives","setElectives","genEd","setGenEd","courseId","currCore","currElec","currGenEd","goToCourse","length","onClick","e","defaultSelectedKeys","selectedKeys","defaultOpenKeys","mode","title","Item","CourseList","classes","list","CourseDescription","useSelector","state","updateCourses","show","setShow","getCourseById","cont","contents","message","alert","showIcon","closable","afterClose","top","code","name","btn","icon","PlusOutlined","subhead","overview","prereq","next","faculty","school","level","terms","term","isNaN","campus","Input","Search","CourseSelector","degree","user","container","topCont","degreeCont","zero","major","majors","searchCont","FilterOutlined","cursor","fontSize","bottomCont","empty","emptyText","path","DegreeSelector","Title","Typography","degreeState","setdegreeState","degreetypeState","setdegreetypeState","flexDirection","justifyContent","height","align","degreetype","index","filterSort","optionA","optionB","localeCompare","degreeselect","shape","size","disabled","DegreeCard","concentration","Text","completed_UOC","UOC","progress","Math","round","to","smooth","duration","hoverable","bordered","data-tip","data-for","percent","trailColor","showInfo","strokeColor","purple","place","SkeletonCard","Button","active","SkeletonDashboard","Avatar","yellow","LiquidProgressChart","textColor","completedUOC","totalUOC","setPercent","fillValue","config","radius","autoFit","statistic","formatter","fill","content","lineHeight","toFixed","liquidStyle","stroke","interval","setInterval","clearInterval","chartRef","Dashboard","isLoading","currYear","Date","getFullYear","useSpring","from","opacity","reset","tension","friction","div","href","target","rel","ListView","ProgressionChecker","setDegree","setIsLoading","fetchDegree","a","get","res","DraggableCourse","courseNames","courseName","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","strong","TermBox","termsOffered","isDragging","match","isDropAllowed","includes","droppableId","isDropDisabled","droppableProps","OptionsDrawer","visible","setVisible","Panel","Collapse","placement","onClose","closeIcon","CloseOutlined","color","getContainer","bodyStyle","background","mask","class","description","ghost","header","SkeletonPlanner","skeletonTermStyle","margin","padding","borderRadius","openNotification","notification","createUnplannedTypes","courseTypes","forEach","hasOwnProperty","isAllEmpty","years","year","every","key","TermPlanner","setYears","setData","setUnplanned","fetchCourses","setTimeout","setTermsOffered","setIsDragging","onDragEnd","result","destination","source","newYears","destYear","destTerm","destIndex","startYear","destBox","unplannedCpy","assign","filter","destCoursesCpy","Array","splice","srcYear","srcTerm","srcIndex","srcBox","alteredBox","srcCoursesCpy","onDragStart","courseItem","RightOutlined","Fragment","Header","Layout","Content","menuStyles","marginLeft","titleStyles","marginBottom","App","current","setCurrent","src","circlesLogo","exact","themeReducer","action","initialState","updateCoursesReducer","append","minors","userReducer","concat","allReducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3f601365.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CourseSelector_container__2EeXD\",\"topCont\":\"CourseSelector_topCont__1a3qM\",\"degreeCont\":\"CourseSelector_degreeCont__3H3Dk\",\"zero\":\"CourseSelector_zero__2wAkl\",\"major\":\"CourseSelector_major__rjFtf\",\"searchCont\":\"CourseSelector_searchCont__2AADt\",\"bottomCont\":\"CourseSelector_bottomCont__3GLCm\",\"empty\":\"CourseSelector_empty__2-6DI\",\"emptyText\":\"CourseSelector_emptyText__7NoVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CourseList_list__17E2o\"};","import React, { useState } from \"react\";\nimport { Switch } from \"antd\";\nimport { IoMdMoon } from \"react-icons/io\";\nimport { FaSun } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleTheme } from \"../actions/toggleTheme\";\n\nfunction ThemeToggle() {\n  const [theme, setTheme] = useState(() => {\n    const theme = window.localStorage.getItem(\"theme\");\n    return theme ? JSON.parse(theme) : \"light\";\n  });\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    window.localStorage.setItem(\"theme\", JSON.stringify(theme));\n    dispatch(toggleTheme(theme));\n    if (theme === \"light\") {\n      document.body.classList.remove(\"dark\");\n      document.body.classList.add(\"light\");\n    } else {\n      document.body.classList.remove(\"light\");\n      document.body.classList.add(\"dark\");\n    }\n  }, [theme]);\n\n  const toggleStyle = {\n    backgroundColor: theme === \"light\" ? \"#b37feb\" : \"#722ed1\",\n  };\n\n  return (\n    <Switch\n      checkedChildren={<IoMdMoon display=\"flex\" />}\n      unCheckedChildren={<IoMdMoon display=\"flex\" />}\n      defaultChecked={theme === \"dark\" ? true : false}\n      onChange={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n      style={toggleStyle}\n    />\n  );\n}\n\nexport default ThemeToggle;\n","export const toggleTheme = (payload) => {\n  return {\n    type: \"toggleTheme\",\n    payload: payload,\n  };\n};\n","import axios from 'axios';\n\nexport const updateDegree = (degree) => { \n    return { \n        type: 'UPDATE_DEGREE', \n        payload: degree\n    }\n}\n\nexport const resetDegree = () => { \n    return { \n        type: 'RESET_DEGREE'\n    }\n}   \n\nexport const getDegree = () => {\n    return (dispatch) => {\n        // dispatch(updateDegree(data));\n    }\n}\n\nexport const setUnplannedCourses = (payload) => {\n    return {\n        type: 'SET_UNPLANNED',\n        payload\n    }\n}\n\nexport const getUnplannedCourses = () => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            url: 'http://localhost:3000/unplanned.json'\n        })\n        .then(({ data }) => {\n            dispatch(setUnplannedCourses(data.unplanned));\n        })\n        .catch(console.log);\n    }\n}\n\nexport const addUnplannedCourse = (id) => {\n    return (dispatch, getState) => {\n        axios({\n            method: 'post',\n            url: 'http://localhost:3000/unplanned.json',\n            data: {\n                id\n            }\n        })\n        .then(_ => {\n            dispatch(getUnplannedCourses());\n        })\n        .catch(console.log);\n    }\n}","import React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport { getAllCourses } from '../../actions/updateCourses';\n\nconst { Option } = Select;\n\nexport default function SearchCourse(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // const courses = useSelector(state => state.updateCourses.courses);\n\n  // useEffect(() => {\n  //   console.log('SEARCH COURSE');\n  //   dispatch(getAllCourses());\n  // }, []);\n\n  function onChange(value) {\n    console.log(`selected ${value}`);\n    props.setCourseId(value);\n    history.push(`/course-selector/${value}`);\n  }\n  \n  function onBlur() {\n    console.log('blur');\n  }\n  \n  function onFocus() {\n    console.log('focus');\n  }\n  \n  function onSearch(val) {\n    console.log('search:', val);\n  }\n\n  return (\n    <Select\n      showSearch\n      style={{ width: '20rem', marginRight: '0.5rem' }}\n      placeholder=\"Find a course\"\n      optionFilterProp=\"children\"\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      onSearch={onSearch}\n      filterOption={(input, option) =>\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {\n        Object.keys(props.courses).map(course => {\n          return (\n            <Option className={\"text\"} value={ course }>{ course }</Option>\n          )\n        })\n      }\n    </Select>\n  );\n}\n\n// const DebounceSelect = ({ fetchOptions, debounceTimeout = 800, ...props }) => {\n//   const [fetching, setFetching] = useState(false);\n//   const [options, setOptions] = useState([]);\n//   const fetchRef = useRef(0);\n\n//   const debounceFetcher = useMemo(() => {\n//     const loadOptions = (value) => {\n//       fetchRef.current += 1;\n//       const fetchId = fetchRef.current;\n//       setOptions([]);\n//       setFetching(true);\n//       fetchOptions(value).then((newOptions) => {\n//         if (fetchId !== fetchRef.current) {\n//           // for fetch callback order\n//           return;\n//         }\n\n//         setOptions(newOptions);\n//         setFetching(false);\n//       });\n//     };\n\n//     return debounce(loadOptions, debounceTimeout);\n//   }, [fetchOptions, debounceTimeout]);\n//   return (\n//     <Select\n//       labelInValue\n//       filterOption={false}\n//       onSearch={debounceFetcher}\n//       notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n//       {...props}\n//       options={options}\n//     />\n//   );\n// } // Usage of DebounceSelect\n\n\n\n// export default function SearchCourse() {\n//   const [value, setValue] = useState([]);\n\n//   const dispatch = useDispatch();\n//   const courses = useSelector(state => state.updateCourses.courses);\n\n//   useEffect(() => {\n//     dispatch(getAllCourses());\n//   }, []);\n\n//   async function fetchUserList(username) {\n//     // console.log('fetching user', username);\n//     // return fetch('https://randomuser.me/api/?results=5')\n//     //   .then((response) => response.json())\n//     //   .then((body) =>\n//     //     body.results.map((user) => ({\n//     //       label: `${user.name.first} ${user.name.last}`,\n//     //       value: user.login.username,\n//     //     })),\n//     //   );\n//     return Object.keys(courses).map(course => ({\n//       label: course,\n//       value: course\n//     }));\n//   }\n\n//   return (\n//     <DebounceSelect\n//       mode=\"multiple\"\n//       value={value}\n//       placeholder=\"Search a course\"\n//       fetchOptions={fetchUserList}\n//       onChange={(newValue) => {\n//         setValue(newValue);\n//       }}\n//       style={{ width: '20rem', marginRight: '0.5rem' }}\n//     />\n//   );\n// }","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getAllCourses } from '../../actions/updateCourses';\nimport { Menu } from 'antd';\n\nconst { SubMenu } = Menu;\n\nexport default function CourseMenu(props) {\n  const { id } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  // const courses = useSelector(state => state.updateCourses.courses);\n  const [core, setCore] = useState([]);\n  const [electives, setElectives] = useState([]);\n  const [genEd, setGenEd] = useState([]);\n  const [courseId, setCourseId] = useState('');\n\n  useEffect(() => {\n    setCourseId(props.courseId);\n  }, [props.courseId]);\n\n  // useEffect(() => {\n  //   console.log('COURSE MENU');\n  //   dispatch(getAllCourses());\n  // }, []);\n\n  useEffect(() => {\n    setCore([]);\n    setElectives([]);\n    setGenEd([]);\n    let currCore = [...core];\n    let currElec = [...electives];\n    let currGenEd = [...genEd];\n    for (const course in props.courses) {\n      if (props.courses[course].type === 'core') {\n        currCore.push(course);\n      } else if (props.courses[course].type === 'elective') {\n        currElec.push(course);\n      } else if (props.courses[course].type === 'gened') {\n        currGenEd.push(course);\n      }\n    };\n    setCore(currCore);\n    setElectives(currElec);\n    setGenEd(currGenEd);\n  }, [props.courses]);\n\n  const handleClick = e => {\n    console.log('click ', e);\n  };\n\n  const goToCourse = (id) => {\n    history.push(`/course-selector/${id}`);\n  }\n\n  return (\n    <>\n      {\n        courseId && core.length > 0 && electives.length > 0 && genEd.length > 0 &&\n        <Menu\n          className={\"text\"}\n          onClick={handleClick}\n          style={{ width: '70%' }}\n          defaultSelectedKeys={[courseId !== '0' ? courseId : core[0]]}\n          selectedKeys={[courseId]}\n          defaultOpenKeys={['sub2', 'sub4', 'sub5']}\n          mode=\"inline\"\n        >\n          <SubMenu className={\"text\"} key=\"sub1\" /* icon={<MailOutlined />} */ title=\"Recently Viewed\">\n            \n          </SubMenu>\n          <SubMenu key=\"sub2\" /* icon={<AppstoreOutlined />} */ title=\"Core\">\n            {\n              core.map((course) => {\n                return (\n                  <Menu.Item key={ course } onClick={ () => goToCourse(course) }>{ course }</Menu.Item>\n                )\n              })\n            }\n          </SubMenu>\n          <SubMenu key=\"sub4\" /* icon={<SettingOutlined />} */ title=\"Electives\">\n            {\n              electives.map((course) => {\n                return (\n                  <Menu.Item key={ course } onClick={ () => goToCourse(course) }>{ course }</Menu.Item>\n                )\n              })\n            }\n          </SubMenu>\n          <SubMenu key=\"sub5\" /* icon={<SettingOutlined />} */ title=\"General Education\">\n            {\n              genEd.map((course) => {\n                return (\n                  <Menu.Item key={ course } onClick={ () => goToCourse(course) }>{ course }</Menu.Item>\n                )\n              })\n            }\n          </SubMenu>\n        </Menu>\n      }\n    </>\n  );\n}","import React from 'react';\nimport { Tag } from 'antd';\nimport classes from './CourseList.module.css';\n\nexport default function CourseList(props) {\n  return (\n    <div className={ classes.list }>\n      {\n        props.data && props.data.map(course => {\n          return (\n            <Tag className={`text`}>{ course }</Tag>\n          )\n        })\n      }\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory, useRouteMatch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Tag, Alert } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport CourseList from './CourseList';\nimport { getCourseById } from '../../actions/updateCourses';\nimport { addUnplannedCourse, setUnplannedCourses } from '../../actions/userAction';\nimport classes from './CourseDescription.module.css';\n\nexport default function CourseDescription(props) {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const course = useSelector(state => state.updateCourses.course);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    dispatch(getCourseById(id));\n    props.setCourseId(id);\n  }, [id]);\n\n  const addToPlanner = () => {\n    // dispatch(addUnplannedCourse(id));\n    setShow(true);\n    dispatch(setUnplannedCourses(id));\n  }\n  \n  const hideAlert = () => {\n    setShow(false);\n  }\n\n  return (\n    <div className={ classes.cont }>\n      <div className={ classes.contents }>\n        {\n          show &&\n          <Alert message={`Yay, you've successfully added ${id} to your planner!` } type=\"success\" className={`${classes.alert}` } showIcon closable afterClose={ hideAlert }/>\n        }\n        <div className={ classes.top }>\n          <div>\n            <h2 className={ `${classes.code} text` }>{ id }</h2>\n            <h1 className={ `${classes.name} text` }>{ course.name }</h1>\n          </div>\n          <Button className={ classes.btn } onClick={ addToPlanner } type=\"primary\" icon={<PlusOutlined />}>\n            Add to planner\n          </Button>\n        </div>\n        <h3 className={ `${classes.subhead} text` }>Overview</h3>\n        <p className={`text`}>{ course.overview }</p>\n        <h3 className={ `${classes.subhead} text` }>Prerequisites</h3>\n        <CourseList data={ course.prereq }/>\n        <h3 className={ `${classes.subhead} text` }>Unlocks these next courses</h3>\n        <CourseList data={ course.next }/>\n      </div>\n      <div>\n        <h3 className={ `${classes.subhead} text` }>Faculty</h3>\n        <p className={`text`}>{ course.faculty }</p>\n        <h3 className={ `${classes.subhead} text` }>School</h3>\n        <p className={`text`}>{ course.school }</p>\n        <h3 className={ `${classes.subhead} text` }>Study Level</h3>\n        <p className={`text`}>{ course.level }</p>\n        <h3 className={ `${classes.subhead} text` }>Offering Terms</h3>\n        <div className={ classes.list }>\n          {\n            course.terms && course.terms.map(term => {\n              return (\n                <Tag className={`text`}>{ isNaN(term) ? `${term} Term` : `Term ${term}` }</Tag>\n              )\n            })\n          }\n        </div>\n        <h3 className={ `${classes.subhead} text` }>Campus</h3>\n        <p className={`text`}>{ course.campus }</p>\n      </div>\n    </div>\n  );\n}","import axios from 'axios';\n\nexport const appendCourse = (payload) => { \n    return { \n        type: 'APPEND', \n        payload: payload\n    }\n}\n\nexport const deleteCourse = (payload) => { \n    return { \n        type: 'DELETE', \n        payload: payload, \n    }\n}\n\nexport const setCourses = (payload) => {\n    return {\n        type: 'SET_COURSES',\n        payload: payload\n    }\n}\n\nexport const setCourse = (payload) => {\n    return {\n        type: 'SET_COURSE',\n        payload: payload\n    }\n}\n\nexport const getAllCourses = () => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            url: 'http://localhost:3000/courses.json'\n        })\n        .then(({ data }) => {\n            dispatch(setCourses(data));\n        })\n        .catch(console.log);\n    }\n}\n\nexport const getCourseById = (id) => {\n    console.log('HERE I AMMMM', id)\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            url: 'http://localhost:3000/courses.json'\n        })\n        .then(({ data }) => {\n            console.log('GOT DATA', data)\n            Object.keys(data).map(course => {\n            \n                if (course === id) {\n                    console.log('YOOO GOT IT', data[course])\n                    dispatch(setCourse(data[course]));\n                }\n            })\n        })\n        .catch(console.log);\n    }\n}","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input } from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\nimport { getAllCourses } from '../../actions/updateCourses';\nimport { getUnplannedCourses } from '../../actions/userAction';\nimport classes from './CourseSelector.module.css';\nimport SearchCourse from './SearchCourse';\nimport CourseMenu from './CourseMenu';\nimport CourseDescription from './CourseDescription';\n\nconst { Search } = Input;\n\nexport default function CourseSelector() {\n  const dispatch = useDispatch();\n  const courses = useSelector(state => state.updateCourses.courses);\n  const degree = useSelector(state => state.user.degree);\n  const unplanned = useSelector(state => state.user.unplanned);\n  const [courseId, setCourseId] = useState('0');\n\n  // useEffect(() => {\n  //   dispatch(getDegree());\n  // }, []);\n\n  useEffect(() => {\n    dispatch(getUnplannedCourses());\n  }, []);\n\n  useEffect(() => {\n    console.log('COURSE MENU');\n    dispatch(getAllCourses());\n  }, []);\n\n  return (\n    <>\n    {/* {JSON.stringify(courses)} */}\n      <div className={ classes.container }>\n        <div className={ classes.topCont }>\n        {/* { JSON.stringify(degree) } */}\n          <div className={ classes.degreeCont }>\n            <h1 className={ `${classes.zero} text` }>{ degree.code } - { degree.name }</h1>\n            <h2 className={ `${classes.zero} ${classes.major} text` }>{ degree.majors[0].code }</h2>\n          </div>\n          <div className={ classes.searchCont }>\n            <SearchCourse courses={ courses } setCourseId={ setCourseId } />\n            {/* <Search placeholder=\"Search a course\" allowClear style={{ width: '20rem', marginRight: '0.5rem' }} /> */}\n            <FilterOutlined style={{ cursor: 'pointer', fontSize: '1.3rem' }}/>\n          </div>\n        </div>\n        <div className={ classes.bottomCont }>\n          <CourseMenu courses={ courses } courseId={ courseId } />\n            {\n              courseId === '0' ?\n\n              <div className={ classes.empty }>\n                <h3 className={`text ${ classes.emptyText }`}>Select a course on the left to view! :)</h3>\n              </div>\n              :\n              <></>\n            }\n          <Route path=\"/course-selector/:id\">\n            <CourseDescription setCourseId={ setCourseId }/>\n          </Route>\n        </div>\n        {/* UNPLANNED {JSON.stringify(unplanned)} */}\n      </div>\n    </>\n  );\n}","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport 'antd/dist/antd.css';\nimport { Select } from 'antd';\nimport { Typography } from 'antd';\nimport { Button } from 'antd';\n\nfunction DegreeSelector() {\n  const { Option } = Select;\n  const { Title } = Typography;\n  const degreetype = ['Undergraduate','Postgraduate']\n  const degreeselect = ['Bachelor of Arts', \n    'Bachelor of Computer Science',\n    'Bachelor of Commerce',\n    'Bachelor of Commerce/Law',\n    'Bachelor of Engineering (Honours)',\n    'Bachelor of Medical Studies/Doctor of Medicine'\n  ]\n  \n  const [degreeState,setdegreeState] = useState('');\n  const [degreetypeState,setdegreetypeState] = useState('');\n\n  const onButtonClick=(e)=>{\n    console.log('Button clicked')\n  }\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", height: \"100vh\" }}>\n      <Title className = \"text\" align=\"center\">\n        I am an <span></span>\n          <Select\n            placeholder=\"Undergraduate\"\n            onChange={(value)=>{\n              setdegreetypeState(value);\n            }} \n          >\n            {degreetype.map((degreetype,index)=>{\n              return <Option key={index} value={degreetype}>\n                {degreetype}\n                </Option>\n            })}\n          </Select>\n          <span></span> student <span></span>\n        <p> studying a <span></span>\n          <Select\n            className=\"degreeSelect\"\n            onChange={(value)=>{\n              setdegreeState(value);\n              // console.log(degreeState)\n            }} \n            showSearch\n            style={{ width: '30%' }}\n            placeholder=\"Select Degree\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option) => \n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            filterSort={(optionA, optionB) =>\n              optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n            }\n          >\n            {degreeselect.map((degreeselect,index)=>{\n              return <Option key={index} value={degreeselect}>\n                {degreeselect}\n                </Option>\n            })}\n          </Select>\n          <span></span> degree\n        </p>\n        <Button type=\"primary\" \n            shape=\"round\" \n            size={'large'}\n            onClick={onButtonClick}\n            disabled={degreeState==='' || degreetypeState===''}\n            >\n            Start Planning\n        </Button>\n      </Title>\n    </div>\n  );\n}\n\nexport default DegreeSelector;","import React from \"react\";\nimport { Card, Progress, Typography } from \"antd\";\nimport ReactTooltip from \"react-tooltip\";\nimport { purple } from \"@ant-design/colors\";\nimport { Link } from \"react-scroll\";\nimport { useSelector } from \"react-redux\";\n\nconst DegreeCard = ({ concentration }) => {\n  const { Title, Text } = Typography;\n  const { name, type, completed_UOC, UOC } = concentration;\n\n  const progress = Math.round((completed_UOC / UOC) * 100);\n\n  const theme = useSelector((state) => state.theme);\n\n  return (\n    <Link to={name} smooth={true} duration={1000}>\n      <Card className=\"card text\" hoverable bordered={false}>\n        <Title className=\"text\" level={5}>\n          {name}\n        </Title>\n        <Text className=\"secondaryText\">{type}</Text>\n        <div data-tip data-for={type}>\n          <Progress\n            percent={progress}\n            trailColor=\"white\"\n            showInfo={false}\n            strokeColor={{ \"0%\": purple[3], \"100%\": purple[4] }}\n          />\n        </div>\n        <ReactTooltip\n          id={type}\n          place=\"bottom\"\n          className=\"tooltip\"\n          type={theme === \"dark\" && \"light\"}\n        >\n          <div>{progress}%</div>\n          <div>\n            ({completed_UOC} / {UOC} UOC)\n          </div>\n        </ReactTooltip>\n      </Card>\n    </Link>\n  );\n};\n\nexport default DegreeCard;\n","import React from \"react\";\nimport { Skeleton } from \"antd\";\n\nconst SkeletonCard = () => {\n  return (\n    <Skeleton.Button\n      className=\"skeletonCard\"\n      style={{ width: \"20em\", height: \"8.5em\" }}\n      active={true}\n      round\n    />\n  );\n};\n\nexport default SkeletonCard;\n","import React from \"react\";\nimport { Skeleton } from \"antd\";\nimport SkeletonCard from \"./SkeletonCard\";\n\nconst SkeletonDashboard = () => {\n  return (\n    <div className=\"centered\">\n      <Skeleton.Avatar style={{ width: 320, height: 320 }} active={true} />\n      <Skeleton.Input\n        className=\"textLink\"\n        style={{ width: 400, height: 40 }}\n        active={true}\n      />\n      <div className=\"cards\">\n        <SkeletonCard />\n        <SkeletonCard />\n      </div>\n    </div>\n  );\n};\n\nexport default SkeletonDashboard;\n","export const lightYellow = \"#f9b01e\";\nexport const lightGrey = \"#565652\";\nexport const darkGrey = \"#323739\";\n\nexport const yellow = \"#FAAD14\";\nexport const purple = \"#9254de\";\n","import React, { useState, useEffect } from \"react\";\nimport { Liquid } from \"@ant-design/charts\";\nimport ReactTooltip from \"react-tooltip\";\nimport { useSelector } from \"react-redux\";\nimport {\n  purple,\n  yellow,\n  lightYellow,\n  lightGrey,\n  darkGrey,\n} from \"../GlobalColors\";\n\nconst LiquidProgressChart = ({ completedUOC, totalUOC }) => {\n  var [percent, setPercent] = useState(0);\n  var fillValue = completedUOC / totalUOC;\n  var ref;\n\n  // light mode text color varies\n  var textColor;\n  if (percent < 0.31) {\n    textColor = lightYellow;\n  } else if (percent < 0.45) {\n    textColor = lightGrey;\n  } else if (percent < 0.56) {\n    textColor = darkGrey;\n  } else {\n    textColor = \"white\";\n  }\n\n  // dark mode always has white text\n  const theme = useSelector((state) => state.theme);\n  if (theme === \"dark\") {\n    textColor = \"white\";\n  }\n\n  var config = {\n    percent: percent,\n    radius: 1,\n    width: 320,\n    height: 320,\n    autoFit: false,\n    statistic: {\n      title: {\n        formatter: () => \"Progress\",\n        style: () => ({\n          fill: textColor,\n        }),\n      },\n      content: {\n        style: () => ({\n          fontSize: 60,\n          lineHeight: 1,\n          fill: textColor,\n        }),\n        formatter: () => (percent * 100).toFixed(0) + \"%\",\n      },\n    },\n    liquidStyle: () => ({\n      fill: percent > 0.45 ? purple : yellow,\n      stroke: percent > 0.45 ? purple : yellow,\n    }),\n  };\n\n  // increment percentage from 0 to fillValue\n  useEffect(() => {\n    var data = 0.0;\n    const time = 30;\n    var interval = setInterval(function () {\n      data += 0.01;\n      if (data <= fillValue + 0.01) {\n        setPercent(data);\n      } else {\n        clearInterval(interval);\n      }\n    }, time);\n  }, []);\n\n  return (\n    <div>\n      <ReactTooltip place=\"bottom\" type={theme === \"dark\" && \"light\"}>\n        {completedUOC} / {totalUOC} UOC\n      </ReactTooltip>\n      <div data-tip>\n        <Liquid {...config} chartRef={(chartRef) => (ref = chartRef)} />\n      </div>\n    </div>\n  );\n};\n\nexport default LiquidProgressChart;\n","\nimport React from \"react\";\nimport { Typography } from \"antd\";\nimport { useSpring, animated } from \"react-spring\";\nimport DegreeCard from \"./DegreeCard\";\nimport SkeletonDashboard from \"./SkeletonDashboard\";\nimport LiquidProgressChart from \"../../components/liquidProgressChart/LiquidProgressChart\";\n\nconst Dashboard = ({ isLoading, degree }) => {\n  const { Title } = Typography;\n  const currYear = new Date().getFullYear();\n\n  const props = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n    reset: true,\n    config: { tension: 80, friction: 60 },\n  });\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <SkeletonDashboard />\n      ) : (\n        <animated.div className=\"centered\" style={props}>\n          <LiquidProgressChart\n            completedUOC={degree[\"completed_UOC\"]}\n            totalUOC={degree[\"UOC\"]}\n          />\n          <a\n            href={`https://www.handbook.unsw.edu.au/undergraduate/programs/${currYear}/${degree[\"code\"]}?year=${currYear}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"textLink\"\n          >\n            <Title className=\"text textLink\">{degree[\"name\"]}</Title>\n          </a>\n          <div className=\"cards\">\n            {degree[\"concentrations\"].map((concentration, index) => (\n              <DegreeCard key={index} concentration={concentration} />\n            ))}\n          </div>\n        </animated.div>\n      )}\n    </div>\n  );\n};\n\n\nexport default Dashboard;","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { Skeleton } from \"antd\";\n\nconst ListView = ({ isLoading, degree }) => {\n  const { Title } = Typography;\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton />\n      ) : (\n        <>\n          {degree[\"concentrations\"].map((concentration) => (\n            <div\n              className=\"listPage\"\n              id={concentration[\"name\"]}\n              key={concentration[\"name\"]}\n            >\n              <Title className=\"text\">{concentration[\"name\"]}</Title>\n            </div>\n          ))}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ListView;\n","import React, { useEffect, useState } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport ListView from \"./ListView\";\nimport axios from \"axios\";\nimport './main.less';\nconst ProgressionChecker = () => {\n  const [degree, setDegree] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchDegree = async () => {\n    const res = await axios.get(\"degree.json\");\n    setDegree(res.data);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    // setTimeout(fetchDegree, 2000);  // testing skeleton\n    fetchDegree();\n  }, []);\n\n  return (\n    <>\n      <Dashboard isLoading={isLoading} degree={degree} />\n      <ListView isLoading={isLoading} degree={degree} />\n    </>\n  );\n};\n\nexport default ProgressionChecker;\n\n\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { useSelector } from \"react-redux\";\n\nfunction DraggableCourse({ code, index, courseNames }) {\n  //   let code = course.match(/([A-Z]{4}[0-9]{4}):/)[1];\n  const { Text } = Typography;\n  const courseName = courseNames[code][\"title\"];\n\n  return (\n    <Draggable draggableId={code} index={index}>\n      {(provided) => (\n        <li\n          className=\"course\"\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          style={{\n            ...provided.draggableProps.style,\n          }}\n        >\n          <Text strong className=\"text\">\n            {code}\n          </Text>\n          <Text className=\"text\">: {courseName} </Text>\n        </li>\n      )}\n    </Draggable>\n  );\n}\n\nexport default DraggableCourse;\n","import React from \"react\";\nimport { Typography, Badge } from \"antd\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport DraggableCourse from \"./DraggableCourse\";\nimport { useSelector } from \"react-redux\";\n\nfunction TermBox({ name, courses, courseNames, termsOffered, isDragging }) {\n  const term = name.match(/t[0-3]/)[0];\n  const isDropAllowed = termsOffered.includes(term);\n\n  return (\n    <Droppable droppableId={name} isDropDisabled={!isDropAllowed}>\n      {(provided) => (\n        <ul\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n          className={`termBox ${isDropAllowed && isDragging && \"droppable\"}  `}\n        >\n          {courses.map((code, index) => (\n            <DraggableCourse\n              key={code}\n              code={code}\n              index={index}\n              courseNames={courseNames}\n            />\n          ))}\n          {provided.placeholder}\n        </ul>\n      )}\n    </Droppable>\n  );\n}\n\nexport default TermBox;\n","import React from \"react\";\n\nimport { Typography, Drawer, Collapse, Alert, Button } from \"antd\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport DraggableCourse from \"./DraggableCourse\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\n\nconst OptionsDrawer = ({ visible, setVisible, unplanned, data }) => {\n  const { Title } = Typography;\n  const { Panel } = Collapse;\n\n  const theme = useSelector((state) => state.theme);\n  return (\n    <Drawer\n      placement=\"left\"\n      onClose={() => setVisible(false)}\n      closeIcon={\n        <CloseOutlined style={{ color: theme === \"dark\" && \"white\" }} />\n      }\n      visible={visible}\n      getContainer={false}\n      bodyStyle={{\n        background: theme === \"dark\" ? \"#151718\" : \"white\",\n      }}\n      width=\"25em\"\n      mask={false}\n    >\n      <Title class=\"text\">Options</Title>\n      <Title level={2} class=\"text\">\n        Unplanned Courses\n      </Title>\n      {Object.keys(unplanned).length === 0 ? (\n        <Alert\n          message=\"Oops!\" // might need to change this\n          description=\"It looks like you haven't added any courses to your term planner. Please do so in the course selector.\"\n          type=\"warning\"\n          showIcon\n          className=\"alert\"\n        />\n      ) : (\n        <Collapse className=\"collapse\" ghost={theme === \"dark\"}>\n          {Object.keys(unplanned).map((type, index) => (\n            <Panel header={type} key={index}>\n              <Droppable droppableId={type} isDropDisabled={true}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    className=\"panel\"\n                  >\n                    {unplanned[type].map((code, index) => (\n                      <DraggableCourse\n                        code={code}\n                        index={index}\n                        courseNames={data[\"courses\"]}\n                        key={code}\n                      />\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </Panel>\n          ))}\n        </Collapse>\n      )}\n    </Drawer>\n  );\n};\n\nexport default OptionsDrawer;\n","import React from \"react\";\nimport { Skeleton } from \"antd\";\n\nfunction SkeletonPlanner() {\n  const skeletonTermStyle = {\n    //     height: \"20em\",\n    //     width: \"85%\",\n    width: \"20em\",\n    height: \"18em\",\n    margin: \"1em\",\n    padding: \"1.2em\",\n    borderRadius: \"2em\",\n  };\n\n  return (\n    <div className=\"gridContainer\">\n      <div className=\"gridItem\" />\n      <div className=\"gridItem\">Term 1</div>\n      <div className=\"gridItem\">Term 2</div>\n      <div className=\"gridItem\">Term 3</div>\n\n      <div className=\"gridItem\" />\n      <Skeleton.Button active={true} shape=\"round\" style={skeletonTermStyle} />\n      <Skeleton.Button active={true} shape=\"round\" style={skeletonTermStyle} />\n      <Skeleton.Button active={true} shape=\"round\" style={skeletonTermStyle} />\n\n      <div className=\"gridItem\" />\n      <Skeleton.Button active={true} shape=\"round\" style={skeletonTermStyle} />\n      <Skeleton.Button active={true} shape=\"round\" style={skeletonTermStyle} />\n      <Skeleton.Button active={true} shape=\"round\" style={skeletonTermStyle} />\n\n      <div className=\"gridItem\" />\n      <Skeleton.Button active={true} shape=\"round\" style={skeletonTermStyle} />\n      <Skeleton.Button active={true} shape=\"round\" style={skeletonTermStyle} />\n      <Skeleton.Button active={true} shape=\"round\" style={skeletonTermStyle} />\n      {/* <Skeleton.Button style={skeletonTermStyle} className=\"termBox\" /> */}\n    </div>\n  );\n}\n\nexport default SkeletonPlanner;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Typography, Button, Drawer, Collapse, notification } from \"antd\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport DraggableCourse from \"./DraggableCourse\";\nimport TermBox from \"./TermBox\";\nimport { RightOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport OptionsDrawer from \"./OptionsDrawer\";\nimport SkeletonPlanner from \"./SkeletonPlanner\";\nimport \"./main.less\";\n\nconst TermPlanner = () => {\n  const [years, setYears] = useState([{}]);\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [unplanned, setUnplanned] = useState({});\n\n  const fetchCourses = async () => {\n    const res = await axios.get(\"data.json\");\n    setData(res.data);\n    setYears(res.data.years);\n    setUnplanned(createUnplannedTypes(res.data));\n    setIsLoading(false);\n    isAllEmpty(years) && openNotification();\n  };\n\n  useEffect(() => {\n    setTimeout(fetchCourses, 1000); // testing skeleton\n    //     fetchCourses();\n  }, []);\n\n  const handleOnDragEnd = (result) => {\n    setIsDragging(false);\n\n    const { destination, source, draggableId } = result;\n    let newYears = [...years];\n\n    if (!destination) return; // drag outside container\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      // drag to same place\n      return;\n\n    const destYear = destination.droppableId.match(/[0-9]{4}/)[0];\n    const destTerm = destination.droppableId.match(/t[1-3]/)[0];\n    const destIndex = destYear - data.startYear;\n    const destBox = years[destIndex][destTerm];\n\n    // === move unplanned course to term ===\n    if (source.droppableId.match(/[0-9]{4}/) === null) {\n      // updated unplanned list\n      const type = source.droppableId;\n      const code = unplanned[type][source.index];\n      const unplannedCpy = Object.assign({}, unplanned);\n      unplannedCpy[type] = unplannedCpy[type].filter(\n        (course) => course !== code\n      );\n      setUnplanned(unplannedCpy);\n\n      // update destination term box\n      const destCoursesCpy = Array.from(years[destIndex][destTerm]);\n      destCoursesCpy.splice(destination.index, 0, draggableId);\n      newYears[destIndex][destTerm] = destCoursesCpy;\n      setYears(newYears);\n      return;\n    }\n\n    const srcYear = source.droppableId.match(/[0-9]{4}/)[0];\n    const srcTerm = source.droppableId.match(/t[1-3]/)[0];\n    const srcIndex = srcYear - data.startYear;\n    const srcBox = years[srcIndex][srcTerm];\n\n    // === move within one term ===\n    if (srcBox == destBox) {\n      const alteredBox = Array.from(srcBox);\n      alteredBox.splice(source.index, 1);\n      alteredBox.splice(destination.index, 0, draggableId);\n      newYears[srcIndex][srcTerm] = alteredBox;\n      setYears(newYears);\n      return;\n    }\n\n    // === move from one term to another ===\n    const srcCoursesCpy = Array.from(years[srcIndex][srcTerm]);\n    srcCoursesCpy.splice(source.index, 1);\n\n    const destCoursesCpy = Array.from(years[destIndex][destTerm]);\n    destCoursesCpy.splice(destination.index, 0, draggableId);\n\n    newYears[srcIndex][srcTerm] = srcCoursesCpy;\n    newYears[destIndex][destTerm] = destCoursesCpy;\n\n    setYears(newYears);\n  };\n\n  const [termsOffered, setTermsOffered] = useState([]);\n  const [isDragging, setIsDragging] = useState(false);\n  const handleOnDragStart = (courseItem) => {\n    setIsDragging(true);\n    const course = courseItem.draggableId;\n    const terms = data.courses[course][\"termsOffered\"];\n    setTermsOffered(terms);\n  };\n\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"plannerContainer\">\n          <SkeletonPlanner />\n        </div>\n      ) : (\n        <DragDropContext\n          onDragEnd={handleOnDragEnd}\n          onDragStart={handleOnDragStart}\n        >\n          <div className=\"plannerContainer\">\n            <Button\n              type=\"primary\"\n              icon={<RightOutlined />}\n              onClick={() => setVisible(true)}\n              shape=\"circle\"\n              ghost\n            />\n            <div class=\"gridContainer\">\n              <div class=\"gridItem\"></div>\n              <div class=\"gridItem\">Term 1</div>\n              <div class=\"gridItem\">Term 2</div>\n              <div class=\"gridItem\">Term 3</div>\n\n              {years.map((year, index) => (\n                <React.Fragment key={index}>\n                  <div class=\"gridItem\">{data.startYear + index}</div>\n                  {Object.keys(year).map((term) => (\n                    <TermBox\n                      key={data.startYear + index + term}\n                      name={data.startYear + index + term}\n                      courses={year[term]}\n                      courseNames={data.courses}\n                      termsOffered={termsOffered}\n                      isDragging={isDragging}\n                    />\n                  ))}\n                </React.Fragment>\n              ))}\n            </div>\n            <OptionsDrawer\n              visible={visible}\n              setVisible={setVisible}\n              data={data}\n              unplanned={unplanned}\n            />\n          </div>\n        </DragDropContext>\n      )}\n    </>\n  );\n};\n\nconst openNotification = () => {\n  const args = {\n    message: \"Your terms are looking a little empty\",\n    description:\n      \"Open the sidebar on the left to reveal courses that you've added from the course selector\",\n    duration: 10,\n    className: \"text helpNotif\",\n    placement: \"topRight\",\n  };\n  notification[\"info\"](args);\n};\n\n// create separate array for each type\n// e.g. courseTypes = { Core: [\"COMP1511\", \"COMP2521\"], Elective: [\"COMP6881\"] }\nconst createUnplannedTypes = (data) => {\n  if (data[\"unplanned\"] == null) return {};\n  let courseTypes = {};\n  data[\"unplanned\"].forEach((code) => {\n    const type = data[\"courses\"][code][\"type\"];\n    if (!courseTypes.hasOwnProperty(type)) {\n      courseTypes[type] = [code];\n    } else {\n      courseTypes[type].push(code);\n    }\n  });\n  return courseTypes;\n};\n\n// checks if no courses have been planned (to display help notification)\nconst isAllEmpty = (years) => {\n  for (const year of years) {\n    var termEmpty = Object.keys(year).every((key) => year[key].length === 0);\n    if (!termEmpty) return false;\n  }\n  return true;\n};\n\nexport default TermPlanner;\n","export default __webpack_public_path__ + \"static/media/circlesLogo.6be6e992.svg\";","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Menu, Layout, Typography } from \"antd\";\nimport \"./App.less\";\nimport ThemeToggle from \"./components/ThemeToggle\";\nimport CourseSelector from \"./pages/CourseSelector/CourseSelector\";\nimport DegreeSelector from \"./pages/DegreeSelector/main\";\nimport ProgressionChecker from \"./pages/ProgressionChecker/main\";\nimport TermPlanner from \"./pages/TermPlanner/main\";\nimport circlesLogo from \"./images/circlesLogo.svg\";\n\nconst { Header, Content } = Layout;\n\nfunction App() {\n  const [current, setCurrent] = useState(\"progression\");\n\n  const handleClick = (e) => {\n    setCurrent(e.key);\n  };\n\n  const { Title } = Typography;\n  return (\n    <Router>\n      <Header className=\"header\">\n        <img src={circlesLogo} width=\"40\" height=\"40\" />\n        <Title level={3} style={titleStyles}>\n          Circles\n        </Title>\n        <Menu\n          theme=\"dark\"\n          onClick={handleClick}\n          selectedKeys={[current]}\n          mode=\"horizontal\"\n          style={menuStyles}\n        >\n          <Menu.Item key=\"degree\">\n            <span>Degree Selector </span>\n            <Link to=\"/degree-selector\" />\n          </Menu.Item>\n          <Menu.Item key=\"course\">\n            <span>Course Selector</span>\n            <Link to=\"/course-selector\" />\n          </Menu.Item>\n          <Menu.Item key=\"progression\">\n            <span>Progression Checker</span>\n            <Link to=\"/progression-checker\"></Link>\n          </Menu.Item>\n          <Menu.Item key=\"planner\">\n            <span>Term Planner</span>\n            <Link to=\"/term-planner\" />\n          </Menu.Item>\n        </Menu>\n        <ThemeToggle />\n      </Header>\n\n      <Content className=\"content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <DegreeSelector />\n            {/* Change to term planner if user session active */}\n          </Route>\n          <Route path=\"/course-selector\">\n            <CourseSelector />\n          </Route>\n          <Route path=\"/term-planner\">\n            <TermPlanner />\n          </Route>\n          <Route path=\"/degree-selector\">\n            <DegreeSelector />\n          </Route>\n          <Route path=\"/progression-checker\">\n            <ProgressionChecker />\n          </Route>\n        </Switch>\n      </Content>\n    </Router>\n  );\n}\n\nconst menuStyles = {\n  backgroundColor: \"inherit\",\n  marginLeft: \"auto\",\n  marginRight: \"2em\",\n};\n\nconst titleStyles = {\n  marginLeft: \"0.3em\",\n  marginBottom: \"0\",\n};\n\nexport default App;","const themeReducer = (state = \"light\", action) => {\n  switch (action.type) {\n    case \"toggleTheme\":\n      return (state = action.payload);\n    default:\n      return state;\n  }\n};\nexport default themeReducer;\n","const initialState = {\n    courses: {},\n    course: {}\n};\nconst updateCoursesReducer = (state = initialState, action) => { \n    switch (action.type) { \n        case 'SET_COURSES':\n            return { ...state, courses: action.payload };\n        case 'SET_COURSE':\n            return { ...state, course: action.payload };\n        case 'APPEND': \n            return state.append(action.payload); \n        case 'DELETE': \n            return state.filter((value, index) => {\n                return value !== action.payload; \n            }); \n        default: \n            return state; \n    }\n}\n\nexport default updateCoursesReducer; ","const initialState = {\n    name: '',\n    year: 0,\n    degree: {\n        name: 'Computer Science',\n        code: '3778',\n        length: 3,\n        UOC: 144,\n        majors: [\n            {\n                name: 'General',\n                code: 'COMPA1'\n            }\n        ],\n        minors: []\n    },\n    unplanned: []\n}\nconst userReducer = (state = initialState, action) => { \n    switch (action.type) { \n        case 'SET_UNPLANNED':\n            // return { ...state, unplanned: action.payload };\n            return { ...state, unplanned: state.unplanned.concat(action.payload) };\n        case 'UPDATE_DEGREE': \n            return { ...state, degree: action.payload };\n        case 'RESET_DEGREE': \n            return { ...state, degree: initialState };\n        default: \n            return state;    \n    }\n};\n\nexport default userReducer","import { combineReducers } from \"redux\";\nimport themeReducer from \"./themeReducer\";\nimport updateCourses from \"./updateCourses\";\nimport userReducer from \"./userReducer\";\nconst allReducers = combineReducers({\n  updateCourses: updateCourses,\n  user: userReducer,\n  theme: themeReducer,\n});\n\nexport default allReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware, compose }  from 'redux';\nimport allReducers from \"./reducers/index\"; \nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  allReducers, \n  composeEnhancers(applyMiddleware(thunk))\n  // Download redux devtools extension on chrome extensions \n  // This is helpful for debugging the state inside ur browser\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n); \nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"CourseDescription_cont__1cS0Z\",\"contents\":\"CourseDescription_contents__1FxLZ\",\"top\":\"CourseDescription_top__8Yq8C\",\"code\":\"CourseDescription_code__3LVBu\",\"name\":\"CourseDescription_name__rseQE\",\"subhead\":\"CourseDescription_subhead__2Pszo\",\"btn\":\"CourseDescription_btn__24zFy\",\"list\":\"CourseDescription_list__19TkC\",\"alert\":\"CourseDescription_alert__2RMvX\"};"],"sourceRoot":""}