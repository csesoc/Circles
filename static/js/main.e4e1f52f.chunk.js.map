{"version":3,"sources":["components/ThemeToggle.js","actions/toggleTheme.js","pages/Home.js","pages/CourseSelector/CourseSelector.js","pages/DegreeSelector/DegreeSelector.js","pages/TermPlanner/TermPlanner.js","pages/ProgressionChecker/ProgressionChecker.js","App.js","reducers/updateCourses.js","reducers/degreeReducer.js","reducers/themeReducer.js","reducers/index.js","index.js"],"names":["ThemeToggle","useState","theme","window","localStorage","getItem","JSON","parse","setTheme","dispatch","useDispatch","React","useEffect","setItem","stringify","type","payload","document","body","classList","remove","add","checkedChildren","display","unCheckedChildren","defaultChecked","onChange","Home","CourseSelector","DegreeSelector","TermPlanner","ProgressionChecker","Menu","SubMenu","App","current","setCurrent","useSelector","state","degree","onClick","e","console","log","key","selectedKeys","mode","Item","to","exact","path","initialState","updateCoursesReducer","action","append","filter","value","index","degreeReducer","themeReducer","allReducers","combineReducers","updateCourses","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e4e1f52f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Switch } from \"antd\";\nimport { IoMdMoon } from \"react-icons/io\";\nimport { FaSun } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleTheme } from \"../actions/toggleTheme\";\n\nfunction ThemeToggle() {\n  const [theme, setTheme] = useState(() => {\n    const theme = window.localStorage.getItem(\"theme\");\n    return theme ? JSON.parse(theme) : \"light\";\n  });\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    window.localStorage.setItem(\"theme\", JSON.stringify(theme));\n    dispatch(toggleTheme(theme));\n    if (theme === \"light\") {\n      document.body.classList.remove(\"dark\");\n      document.body.classList.add(\"light\");\n    } else {\n      document.body.classList.remove(\"light\");\n      document.body.classList.add(\"dark\");\n    }\n  }, [theme]);\n\n  return (\n    <Switch\n      checkedChildren={<IoMdMoon display=\"flex\" />}\n      unCheckedChildren={<FaSun display=\"flex\" />}\n      defaultChecked={theme === \"dark\" ? true : false}\n      onChange={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n    />\n  );\n}\n\nexport default ThemeToggle;\n","export const toggleTheme = (payload) => {\n  return {\n    type: \"toggleTheme\",\n    payload: payload,\n  };\n};\n","import React from 'react';\n\nexport default function Home() {\n  return (\n    <div>\n      THIS IS HOME\n    </div>\n  );\n}","import React from 'react';\n\nexport default function CourseSelector() {\n  return (\n    <div>\n      THIS IS COURSE SELECTOR\n    </div>\n  );\n}","import React from 'react';\n\nexport default function DegreeSelector() {\n  return (\n    <div>\n      THIS IS DEGREE SELECTOR\n    </div>\n  );\n}","import React from 'react';\n\nexport default function TermPlanner() {\n  return (\n    <div>\n      THIS IS TERM PLANNER\n    </div>\n  );\n}","import React from 'react';\n\nexport default function ProgressionChecker() {\n  return (\n    <div>\n      THIS IS PROGRESSION CHECKER\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateDegree, resetDegree } from \"./actions/updateDegree\";\nimport { appendCourse, deleteCourse } from \"./actions/updateCourses\";\nimport { Button, Menu } from \"antd\";\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\nimport \"./App.less\";\nimport ThemeToggle from \"./components/ThemeToggle\";\nimport Home from './pages/Home';\nimport CourseSelector from \"./pages/CourseSelector/CourseSelector\";\nimport DegreeSelector from \"./pages/DegreeSelector/DegreeSelector\";\nimport TermPlanner from \"./pages/TermPlanner/TermPlanner\";\nimport ProgressionChecker from \"./pages/ProgressionChecker/ProgressionChecker\";\n\nconst { SubMenu } = Menu;\n\nfunction App() {\n  const [current, setCurrent] = useState('mail');\n  // Note: You can access the state from any component since it is passed down from root!\n  const degree = useSelector((state) => {\n    return state.degree;\n  });\n\n  const dispatch = useDispatch();\n\n  const handleClick = (e) => {\n    console.log('click ', e);\n    setCurrent(e.key);\n  };\n\n  return (\n    <>\n      <Router>\n        <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\n          <Menu.Item key=\"home\">\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"degree\">\n            <Link to=\"/degree-selector\">Degree Selector</Link>\n          </Menu.Item>\n          <Menu.Item key=\"course\">\n            <Link to=\"/course-selector\">Course Selector</Link>\n          </Menu.Item>\n          <Menu.Item key=\"progression\">\n            <Link to=\"/progression-checker\">Progression Checker</Link>\n          </Menu.Item>\n          <Menu.Item key=\"planner\">\n            <Link to=\"/term-planner\">Term Planner</Link>\n          </Menu.Item>\n          <Menu.Item key=\"toggle\">\n            <ThemeToggle />\n          </Menu.Item>\n        </Menu>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/course-selector\">\n            <CourseSelector />\n          </Route>\n          <Route path=\"/term-planner\">\n            <TermPlanner />\n          </Route>\n          <Route path=\"/degree-selector\">\n            <DegreeSelector />\n          </Route>\n          <Route path=\"/progression-checker\">\n            <ProgressionChecker />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\n// How I imagine dispatch works\n// dispatch(data) {\n//   for (action in action) {\n//     if data.type = action {\n//       runReducer(data.params);\n//     }\n//   }\n// }\n\n// Click a button\n// Run a function (Reducer)\n// pass in action with information -> action.type  (Action)\n// Run the function which has the same type as action.type ()\n// Update the store (global store) with the next data\n// When any value within the store changes, components which use this value will re-render\n\nexport default App;\n","const initialState = [];\nconst updateCoursesReducer = (state = initialState, action) => { \n    switch (action.type) { \n        case 'APPEND': \n            return state.append(action.payload); \n        case 'DELETE': \n            return state.filter((value, index) => {\n                return value != action.payload; \n            }); \n        default: \n            return state; \n    }\n}\n\nexport default updateCoursesReducer; ","const degreeReducer = (state=null, action) => { \n    switch (action.type) { \n        case 'UPDATE': \n            return state = action.payload; \n        case 'RESET': \n            return state = null;\n        default: \n            return state;    \n    }\n}\nexport default degreeReducer; ","const themeReducer = (state = \"light\", action) => {\n  switch (action.type) {\n    case \"toggleTheme\":\n      return (state = action.payload);\n    default:\n      return state;\n  }\n};\nexport default themeReducer;\n","import updateCoursesReducer from \"./updateCourses\";\nimport degreeReducer from \"./degreeReducer\";\nimport themeReducer from \"./themeReducer\";\nimport { combineReducers } from \"redux\";\nconst allReducers = combineReducers({\n  degree: degreeReducer,\n  updateCourses: updateCoursesReducer,\n  theme: themeReducer,\n});\n\nexport default allReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore }  from 'redux';\nimport allReducers from \"./reducers/index\"; \nimport { Provider } from 'react-redux';\nconst store = createStore(\n  allReducers, \n  // Download redux devtools extension on chrome extensions \n  // This is helpful for debugging the state inside ur browser\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n); \nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}